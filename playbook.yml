---
- hosts: all
  become: yes
  become_method: sudo
  vars:
    terraform_version: "0.11.5"

  tasks:
    - name: Add GPG KEY for gcloud
      apt_key: url=https://packages.cloud.google.com/apt/doc/apt-key.gpg

    - name: Get release name
      shell: echo cloud-sdk-`lsb_release -c -s`
      register: release

    - name: Add Google Cloud repository
      apt_repository:
        repo:  deb http://packages.cloud.google.com/apt {{ release.stdout }} main
        state: present
        filename: 'google-cloud-sdk'

    - name: Install gcloud & kubectl binaries
      apt: name={{ item }} state=present
      with_items:
        - google-cloud-sdk
        - kubectl

    - name: Install Python pip & virtualenv to manage python resources
      apt: name={{ item }} state=present
      with_items:
        - python-pip
        - python-virtualenv

    - name: Install Python libraies for Google Cloud dynamic inventory
      pip: name={{ item }} state=present
      with_items:
        - requests
        - google-auth

    - name: Install Python libraries for the Ansible Kubernetes module
      pip: name={{ item }} state=present
      with_items:
        - openshift
        - PyYAML

    # Install Terraform
    - name: Install unzip, required for Terraform installation
      apt:
        name: unzip
        state: present

    - name: Check Terraform version
      shell: "terraform --version | head -n1 | grep {{ terraform_version }}"
      failed_when: False
      changed_when: False
      register: current_terraform_version

    - name: Determine Terraform checksums
      uri: url="https://releases.hashicorp.com/terraform/{{ terraform_version }}/terraform_{{ terraform_version }}_SHA256SUMS"
           method="GET"
           return_content=True
      register: terraform_checksums

    - name: Download Terraform
      get_url: url="https://releases.hashicorp.com/terraform/{{ terraform_version }}/terraform_{{ terraform_version }}_linux_amd64.zip"
               dest="/usr/local/src/terraform_{{ terraform_version }}_linux_amd64.zip"
               checksum="sha256:{{ item.split(' ') | first }}"
      with_items: "{{ terraform_checksums.content.split('\n') | select('search', 'linux_amd64') | list | first }}"
      register: terraform_downloaded

    - name: Extract and install Terraform
      unarchive: src="/usr/local/src/terraform_{{ terraform_version }}_linux_amd64.zip"
                 dest=/usr/local/bin
                 copy=no
      when: current_terraform_version.rc != 0 or terraform_downloaded is changed
    # End Install Terraform
